---
layout: post
title: "Common Sorting Algorithms"
date: 2022-10-07
categories: [algorithms]
author: [jihong]

jupyter:
  kernelspec:
    display_name: Python 3 (ipykernel)
    language: python
    name: python3
  language_info:
    codemirror_mode:
      name: ipython
      version: 3
    file_extension: .py
    mimetype: text/x-python
    name: python
    nbconvert_exporter: python
    pygments_lexer: ipython3
    version: 3.9.7
  nbformat: 4
  nbformat_minor: 5
---

A sorting algorithm **rearranges the elements in a given list into a particular order**, where the most frequently used orders are numerical or lexicographical, ascending or descending. Sorting algorithms are important as they are extremely useful in reducing complexities of problems that require input data to be in sorted lists.
I am going to organize the most common sorting algorithms in this post.

<!-- more -->

## Classifying Sorting Algorithms

Sorting algorithms can be categorized according to the following parameters:
1. **computational complexity of swaps**
2. **computational complexity of comparisons**
3. **space complexity**
4. **recursion**
5. **stability**
6. **adaptability**

``` {.python}
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import matplotlib.style as style
import datetime
from datetime import date
import math

%matplotlib inline
sns.set_context('paper')
style.use('ggplot')
```

## Get the Data

To look at NYC crimes, we will be using the NYPD arrest data from [NYC
OpenData](https://data.cityofnewyork.us/Public-Safety/NYPD-Arrest-Data-Year-to-Date-/uip8-fykc).
The dataset is a breakdown of every arrest effected in NYC by the NYPD
in 2022 (with the last update on July 15, 2022).

Let\'s import the data and take a look.

### Time-Lapse Heatmap

Overall, we're feeling pretty happy about how this project went. We hit a few snags along the way, but we launched
the change earlier this week and haven't seen any noticeable bugs or problems.

Of course, there's still an important question: was it worth it? What did we gain by completing this refactor?

The answer will mostly depend on what happens next. We're meeting with stakeholders next week to talk about what
kind of features we can add or modifications we might want to make. But for now, we're excited to have one less
application to maintain and to have made it easier for future Artsy engineers to understand and iterate on our
collections infrastructure.
